{"ast":null,"code":"var _jsxFileName = \"/Users/kimmubin/Desktop/folder/kakao-map-api/kakaomap/src/KakaoMap.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst KakaoMap = () => {\n  _s();\n  const [map, setMap] = useState(null);\n  const [isSatellite, setIsSatellite] = useState(false);\n  useEffect(() => {\n    const loadKakaoMap = () => {\n      // 카카오 맵 스크립트 생성 및 로드\n      const script = document.createElement('script');\n      script.src = `https://dapi.kakao.com/v2/maps/sdk.js?appkey=${process.env.REACT_APP_JAVASCRIPT_MAP}&autoload=false`;\n      script.async = true;\n      document.head.appendChild(script);\n      script.onload = () => {\n        kakao.maps.load(() => {\n          const container = document.getElementById('map');\n          const options = {\n            center: new kakao.maps.LatLng(37.4877, 126.8251),\n            level: 3\n          };\n          const newMap = new kakao.maps.Map(container, options);\n          setMap(newMap);\n        });\n      };\n    };\n    loadKakaoMap();\n  }, []);\n  const toggleSatelliteMode = () => {\n    if (map) {\n      const newIsSatellite = !isSatellite;\n      setIsSatellite(newIsSatellite);\n      map.setMapTypeId(newIsSatellite ? kakao.maps.MapTypeId.SKYVIEW : kakao.maps.MapTypeId.ROADMAP);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      position: 'relative'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"map\",\n      style: {\n        width: '100vw',\n        height: '100vh'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: toggleSatelliteMode,\n      style: {\n        position: 'absolute',\n        top: '10px',\n        right: '10px',\n        padding: '5px 10px',\n        borderRadius: '5px',\n        border: '1px solid #ddd',\n        backgroundColor: '#fff'\n      },\n      children: isSatellite ? '기본지도' : '위성지도'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n};\n_s(KakaoMap, \"EGKGCtYjiWfzOriLV2RaKdI9U/Y=\");\n_c = KakaoMap;\nexport default KakaoMap;\nvar _c;\n$RefreshReg$(_c, \"KakaoMap\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","KakaoMap","_s","map","setMap","isSatellite","setIsSatellite","loadKakaoMap","script","document","createElement","src","process","env","REACT_APP_JAVASCRIPT_MAP","async","head","appendChild","onload","kakao","maps","load","container","getElementById","options","center","LatLng","level","newMap","Map","toggleSatelliteMode","newIsSatellite","setMapTypeId","MapTypeId","SKYVIEW","ROADMAP","style","position","children","id","width","height","fileName","_jsxFileName","lineNumber","columnNumber","onClick","top","right","padding","borderRadius","border","backgroundColor","_c","$RefreshReg$"],"sources":["/Users/kimmubin/Desktop/folder/kakao-map-api/kakaomap/src/KakaoMap.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\n\nconst KakaoMap = () => {\n    const [map, setMap] = useState(null);\n    const [isSatellite, setIsSatellite] = useState(false);\n\n    useEffect(() => {\n        const loadKakaoMap = () => {\n            // 카카오 맵 스크립트 생성 및 로드\n            const script = document.createElement('script');\n            script.src = `https://dapi.kakao.com/v2/maps/sdk.js?appkey=${process.env.REACT_APP_JAVASCRIPT_MAP}&autoload=false`;\n            script.async = true;\n            document.head.appendChild(script);\n\n            script.onload = () => {\n                kakao.maps.load(() => {\n                    const container = document.getElementById('map');\n                    const options = {\n                        center: new kakao.maps.LatLng(37.4877, 126.8251),\n                        level: 3,\n                    };\n                    const newMap = new kakao.maps.Map(container, options);\n                    setMap(newMap);\n                });\n            };\n        };\n\n        loadKakaoMap();\n    }, []);\n\n    const toggleSatelliteMode = () => {\n        if (map) {\n            const newIsSatellite = !isSatellite;\n            setIsSatellite(newIsSatellite);\n            map.setMapTypeId(\n                newIsSatellite\n                    ? kakao.maps.MapTypeId.SKYVIEW\n                    : kakao.maps.MapTypeId.ROADMAP\n            );\n        }\n    };\n\n    return (\n        <div style={{ position: 'relative' }}>\n            <div id=\"map\" style={{ width: '100vw', height: '100vh' }}></div>\n            <button\n                onClick={toggleSatelliteMode}\n                style={{\n                    position: 'absolute',\n                    top: '10px',\n                    right: '10px',\n                    padding: '5px 10px',\n                    borderRadius: '5px',\n                    border: '1px solid #ddd',\n                    backgroundColor: '#fff',\n                }}\n            >\n                {isSatellite ? '기본지도' : '위성지도'}\n            </button>\n        </div>\n    );\n};\n\nexport default KakaoMap;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAM,CAACC,GAAG,EAAEC,MAAM,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;EACpC,MAAM,CAACO,WAAW,EAAEC,cAAc,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EAErDD,SAAS,CAAC,MAAM;IACZ,MAAMU,YAAY,GAAGA,CAAA,KAAM;MACvB;MACA,MAAMC,MAAM,GAAGC,QAAQ,CAACC,aAAa,CAAC,QAAQ,CAAC;MAC/CF,MAAM,CAACG,GAAG,GAAG,gDAAgDC,OAAO,CAACC,GAAG,CAACC,wBAAwB,iBAAiB;MAClHN,MAAM,CAACO,KAAK,GAAG,IAAI;MACnBN,QAAQ,CAACO,IAAI,CAACC,WAAW,CAACT,MAAM,CAAC;MAEjCA,MAAM,CAACU,MAAM,GAAG,MAAM;QAClBC,KAAK,CAACC,IAAI,CAACC,IAAI,CAAC,MAAM;UAClB,MAAMC,SAAS,GAAGb,QAAQ,CAACc,cAAc,CAAC,KAAK,CAAC;UAChD,MAAMC,OAAO,GAAG;YACZC,MAAM,EAAE,IAAIN,KAAK,CAACC,IAAI,CAACM,MAAM,CAAC,OAAO,EAAE,QAAQ,CAAC;YAChDC,KAAK,EAAE;UACX,CAAC;UACD,MAAMC,MAAM,GAAG,IAAIT,KAAK,CAACC,IAAI,CAACS,GAAG,CAACP,SAAS,EAAEE,OAAO,CAAC;UACrDpB,MAAM,CAACwB,MAAM,CAAC;QAClB,CAAC,CAAC;MACN,CAAC;IACL,CAAC;IAEDrB,YAAY,CAAC,CAAC;EAClB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMuB,mBAAmB,GAAGA,CAAA,KAAM;IAC9B,IAAI3B,GAAG,EAAE;MACL,MAAM4B,cAAc,GAAG,CAAC1B,WAAW;MACnCC,cAAc,CAACyB,cAAc,CAAC;MAC9B5B,GAAG,CAAC6B,YAAY,CACZD,cAAc,GACRZ,KAAK,CAACC,IAAI,CAACa,SAAS,CAACC,OAAO,GAC5Bf,KAAK,CAACC,IAAI,CAACa,SAAS,CAACE,OAC/B,CAAC;IACL;EACJ,CAAC;EAED,oBACInC,OAAA;IAAKoC,KAAK,EAAE;MAAEC,QAAQ,EAAE;IAAW,CAAE;IAAAC,QAAA,gBACjCtC,OAAA;MAAKuC,EAAE,EAAC,KAAK;MAACH,KAAK,EAAE;QAAEI,KAAK,EAAE,OAAO;QAAEC,MAAM,EAAE;MAAQ;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eAChE7C,OAAA;MACI8C,OAAO,EAAEhB,mBAAoB;MAC7BM,KAAK,EAAE;QACHC,QAAQ,EAAE,UAAU;QACpBU,GAAG,EAAE,MAAM;QACXC,KAAK,EAAE,MAAM;QACbC,OAAO,EAAE,UAAU;QACnBC,YAAY,EAAE,KAAK;QACnBC,MAAM,EAAE,gBAAgB;QACxBC,eAAe,EAAE;MACrB,CAAE;MAAAd,QAAA,EAEDjC,WAAW,GAAG,MAAM,GAAG;IAAM;MAAAqC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1B,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACR,CAAC;AAEd,CAAC;AAAC3C,EAAA,CA3DID,QAAQ;AAAAoD,EAAA,GAARpD,QAAQ;AA6Dd,eAAeA,QAAQ;AAAC,IAAAoD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}